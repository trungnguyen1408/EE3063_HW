# -*- coding: utf-8 -*-
"""GradientDescent.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15E-EtqHb7tOd0TlPIAE_MCyvdBW3N6jS
"""

import numpy as np
import matplotlib.pyplot as plt
import math
from __future__ import division, print_function, unicode_literals

def f1(X):
  return (1/2*X[1]**4+X[0]**4+3*X[0]*X[1]+X[0]+3)/5
def gradf1(X):
  x = X[0]
  y = X[1]
  a = 4*x**3+3*y+1
  b = 2*y**3+3*x
  c = np.hstack((a,b))/5
 
  return c

def f3(X):
  return (4*np.cos(X[1]*X[0])+X[0]*X[1]+2*X[0]**2+X[1]**2)/ 4
def gradf3(X):
  x = X[0]
  y = X[1]
  a = (-4*y*np.sin(x*y)+y+4*x)/ 4
  b = (-4*x*np.sin(x*y)+x+2*y) / 4
  c = np.hstack((a,b))
 
  return c

def f2(x):
  return 3*x**4-4*x**3-12*x**2-2
def gradf2(x):
  return 12*x**3-12*x**2-24*x

def GD(eta, x_0,gradfunction):
    x = x_0
    for it in range(10000):
        x_new = x[-1] - eta*gradfunction(x[-1])
        
        if abs(gradfunction(x_new)) < 1e-3:
          break
        x=np.vstack((x,x_new))
        
    return x,it,eta

def GD2(eta, x_0,gradfunction,function):
    x = x_0
    for it in range(1000000):
        x_new = x[-1] - eta*gradfunction(x[-1])
        if abs(function(x_new)-function(x[-1])) < 1e-5:
          break
        x=np.vstack((x,x_new))
        
  

    return x,it,eta

# X=np.random.randn(1,2)
X= np.array([[-4,-4]])
x,it,eta=GD2(0.1,X,gradf1,f1)
print("learning rate= {}".format(eta))
print("Số lần cập nhật nghiệm: {}".format(it))
print("Nghiệm khởi tạo: {}".format(x[0]))
print("4 nghiệm cập nhật cuối cùng: \n {}".format(x[-4:,:]))
print("Giá trị của hàm số tại nghiệm cuối {} là : {}".format(x[-1],f1(x[-1])))

print(x[-4:,:])

np.arange(0,10).reshape(10,-1)

X=np.array(([[4]]))
a,b,c = GD(0.4,X, gradf2)
x=np.linspace(-4,3,5000)
y=f2(x)
plt.figure(figsize=(15,10))
plt.plot(a[1:-1], f2(a[1:-1]), 'go', markersize = 8)
plt.plot(a[0], f2(a[0]), 'yo', markersize = 8)
plt.plot(a[-1], f2(a[-1]), 'bo', markersize = 8)  

plt.plot(x,y,'-r')
plt.xlabel("x",)
plt.ylabel("y")
plt.title("Đồ thị hàm số y=f(x)")
print(" Số lần cập nhật nghiệm là: {}\n Nghiệm được cập nhật cuối cùng:{:.3f} \n Giá trị hàm số tại x={:.3f} là: {:.3f} \n Learning rate: eta={}".format(b,float(a[-1]),float(a[-1]),float(f2(a[-1])),c))